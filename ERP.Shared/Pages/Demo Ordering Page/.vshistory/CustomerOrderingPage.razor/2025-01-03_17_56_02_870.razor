@page "/Demo Ordering Page/catalog"
@inject ProductsApiService ProductAPI

<div class="row mb-5">
    <div class="col">
        <button class="btn btn-primary" @onclick="CreateNewProduct">New Product</button>
    </div>
    <div class="col">
        @if (!string.IsNullOrEmpty(ErrorMessage))
        {
            <div class="alert alert-danger">@ErrorMessage</div>
        }
    </div>
</div>

@if (ProductList == null)
{
    <p>Loading.......</p>
}
else if (ProductList.Count == 0)
{
    <p>No products available.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>ProductId</th>
                <th>ProductName</th>
                <th>Category</th>
                <th>UnitPrice</th>
                <th>Description</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in ProductList)
            {
                <tr>
                    <td>@item.ProductId</td>
                    <td>@item.ProductName</td>
                    <td>@item.Category</td>
                    <td>@item.UnitPrice</td>
                    <td>@item.Description</td>
                    <p>
                        <button class="btn btn-link" @onclick="update">Edit</button>
                        <button class="btn btn-link" @onclick="Delete">Delete</button>
                    </p>

                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<ProductsListResponse>? ProductList;
    private string? ErrorMessage;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            ProductList = await ProductAPI.GetProductsAsync();
            if (ProductList == null)
            {
                Console.WriteLine("No products returned from the API.");
            }
        }
        catch (Exception ex)
        {
            ErrorMessage = "Failed to load products. Please try again later.";
            Console.Error.WriteLine($"Error fetching products: {ex.Message}");
        }
    }

    private void CreateNewProduct()
    {
        Console.WriteLine("Redirecting to create product page...");
        // Handle navigation or logic for creating a new product
    }
    private void update(){
        Console.WriteLine("Gonna Update the products..");
    }
    private void Delete(){
        Console.WriteLine("Its the Edit part..");
    }
}
