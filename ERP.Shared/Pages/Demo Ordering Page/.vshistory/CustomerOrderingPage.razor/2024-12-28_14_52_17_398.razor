@* <h3>CustomerOrderingPage</h3>

@code {

}
 *@
 @page "/Demo Ordering Page/catalog"
@inject ManufacturingApiService CatalogService

<h1>Catalog</h1>

@if (catalogItems == null)
{
    <p>Loading...</p>
}
else
{
    <div class="catalog-container">
        @foreach (var item in catalogItems)
        {
            <div class="catalog-item">
                <img src="@item.FilePath" alt="@item.Name" />
                <h3>@item.ProductName</h3>
                <p>@item.Description</p>
                <p>Price: @item.UnitPrice</p>
            </div>
        }
    </div>
}

@code {
    private List<ProductViewModel>? catalogItems;
    


    protected override async Task OnInitializedAsync()
    {
        var 
        var CatalogImages = await CatalogService.CatalogListAsync();

        catalogItems = products.Select(product => new ProductViewModel {
                ProductId = product.ProductId,
                ProductName = product.ProductName,
                Category = product.Category,
                UnitPrice = product.UnitPrice,
                Description = product.Description,
                FilePath = CatalogImages.FirstOrDefault(img => img.ProductId == product.ProductId)?.FilePath
        }).ToList();

    }
    private class ProductViewModel
    {
        public int ProductId { get; set; }

        public string ProductName { get; set; } = null!;

        public string? Category { get; set; }

        public decimal? UnitPrice { get; set; }

        public string? Description { get; set; }

        public string? FilePath { get; set; }
    }
}
