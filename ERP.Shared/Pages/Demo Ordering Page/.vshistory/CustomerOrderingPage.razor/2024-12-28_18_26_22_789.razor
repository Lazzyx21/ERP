@* <h3>Custo,merOrderingPage</h3>

@code {

}
 *@


@page "/Demo Ordering Page/catalog"
@inject ProductApiServices productAPI
@inject CatalogApiServices catalogAPI 


<h1>Catalog</h1>
Hi there Lazzy
@if (catalogItems == null)
{
    <p>Loading...</p>
}
else
{   
    <table>
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Description</th>
                <th>Unit Price</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var item in catalogItems){
                <tr>
                    <td>@item.FilePath</td>  
                    <td>@item.ProductName</td>
                    <td>@item.Description</td>
                </tr>
            }
        </tbody>
    </table> 
     <div class="catalog-container">
        @foreach (var item in catalogItems)
        {
            <div class="catalog-item">
                @* <img src="@item.FilePath" alt="@item.ProductName" />  *@
                 <h3>@item.ProductName</h3>
                <p>@item.Description</p>
                <p>Price: @item.UnitPrice</p>
            </div>
        }
    </div> 
}

@code {
    private List<ProductsListResponse>? catalogItems;

    protected override async Task OnInitializedAsync()
    {

        var CatalogImages = await catalogAPI.CatalogListAsync();
        var products = await productAPI.GetProductsAsync();

       

        catalogItems = products.Select(product => new ProductsListResponse
            {
                ProductId = product.ProductId,
                ProductName = product.ProductName,
                Category = product.Category,
                UnitPrice = product.UnitPrice,
                Description = product.Description,
                // FilePath = CatalogImages.FirstOrDefault(img => img.ProductId == product.ProductId)?.FilePath
        }).ToList();

    }
    private class ProductViewModel
    {
        public int ProductId { get; set; }

        public string ProductName { get; set; } = null!;

        public string? Category { get; set; }

        public decimal? UnitPrice { get; set; }

        public string? Description { get; set; }

        public string? FilePath { get; set; }
    }
}
