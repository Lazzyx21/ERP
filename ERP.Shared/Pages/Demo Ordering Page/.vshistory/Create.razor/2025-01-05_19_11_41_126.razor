@page "/Demo Ordering Page/create-product"
@using Manufacturing_API.DTO.Request
@inject HttpClient Http
@inject NavigationManager _navigationManager

<h3>Create Product</h3>

<div class="row mb-3">
    <label class="col-sm-4 col-form-label">Product Name:</label>
    <div class="col-sm-8">
        <input type="text" @bind="ProductRequest.ProductName" />
    </div>
    

</div>
<div class="row mb-3">
    <label class="col-sm-4 col-form-label">Category:</label>
    
    <div class="col-sm-8">
        <select class="form-select" @bind="ProductRequest.Category">
            <option value="Mouse">Mouse</option>
            <option value="KeyCaps">KeyCaps</option>
            <option value="KeyBoard">KeyBoard</option>
            <option value="Cups">Cups</option>
            <option value="3DNightLight">3D Night Light</option>
            <option value="Others">Others</option>
        </select>
    </div>
</div>
<div class="row mb-3">
    <label class="col-sm-4 col-form-label">Unit Price:</label>
    <div class="col-sm-8">
        <input type="number" @bind="ProductRequest.UnitPrice" />
    </div>
</div>
<div class="row mb-3">
    <label class="col-sm-4 col-form-label">Description:</label>
    <div class="col-sm-8">
        <textarea @bind="ProductRequest.Description"></textarea>
    </div>
</div>
@* <div class="row mb-3">
    <label class="col-sm-4 col-form-label">ImageInput</label>
    <input class="form-control" @bind="ProductRequest.ImageFilePath"/>
</div> *@

<div class="row">
    <div class="offset-sm-4 col-sm-4 d-grid">
        <button type="submit" class="btn btn-primary" @onclick="CreateProduct">Create</button>
    </div>
    <div class="col-sm-4 d-grid">
        <button class="btn btn-outline-primary" @onclick="Update">Cancel</button>
    </div>
</div>




<p>@ResponseMessage</p>

@code {
    private ProductRequest ProductRequest = new ProductRequest();
    private string ResponseMessage = "";

    private async Task CreateProduct()
    {
        var response = await Http.PostAsJsonAsync("http://localhost:5163/api/controller/AddProducts", ProductRequest);
        if (response.IsSuccessStatusCode)
        {
            ResponseMessage = "Product created successfully!";
        }
        else
        {
            ResponseMessage = "Failed to create product.";
        }
    }
    private async Task Update(){
        _navigationManager.NavigateTo("/Demo Ordering Page/catalog");
    }
}
